// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SWD392_BE.Repositories.Migrations
{
    [DbContext(typeof(CampusFoodSystemContext))]
    [Migration("20240526025154_CampusFoodSystem")]
    partial class CampusFoodSystem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Area__3214EC07B26BFC36");

                    b.HasIndex(new[] { "AreaId" }, "UQ__Area__70B82049341DE850")
                        .IsUnique();

                    b.ToTable("Area", (string)null);
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.AreaSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AreaSessionId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__AreaSess__3214EC076D60CD96");

                    b.HasIndex("AreaId");

                    b.HasIndex("SessionId");

                    b.HasIndex(new[] { "AreaSessionId" }, "UQ__AreaSess__E80F50256BAAC6F0")
                        .IsUnique();

                    b.ToTable("AreaSession", (string)null);
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.Campus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CampusId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Campus__3214EC07A5723796");

                    b.HasIndex("AreaId");

                    b.HasIndex(new[] { "CampusId" }, "UQ__Campus__FD598DD7CC2976B3")
                        .IsUnique();

                    b.ToTable("Campus", (string)null);
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cate")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Image")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StoreId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Food__3214EC078EFC4B87");

                    b.HasIndex("StoreId");

                    b.HasIndex(new[] { "FoodId" }, "UQ__Food__856DB3EA0A736D4B")
                        .IsUnique();

                    b.ToTable("Food", (string)null);
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaSessionId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StoreId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TransationId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Order__3214EC07C8EDD9E8");

                    b.HasIndex("AreaSessionId");

                    b.HasIndex("StoreId");

                    b.HasIndex("TransationId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "OrderId" }, "UQ__Order__C3905BCED0AE1AF1")
                        .IsUnique();

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FoodId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderDetailId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__OrderDet__3214EC07531AB5AA");

                    b.HasIndex("FoodId");

                    b.HasIndex("OrderId");

                    b.HasIndex(new[] { "OrderDetailId" }, "UQ__OrderDet__D3B9D36D90383D15")
                        .IsUnique();

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id")
                        .HasName("PK__Session__3214EC07E8C8F427");

                    b.HasIndex(new[] { "SessionId" }, "UQ__Session__C9F49291B4A69BBB")
                        .IsUnique();

                    b.ToTable("Session", (string)null);
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StoreId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Store__3214EC07F087FC19");

                    b.HasIndex("AreaId");

                    b.HasIndex(new[] { "StoreId" }, "UQ__Store__3B82F100A9787477")
                        .IsUnique();

                    b.ToTable("Store", (string)null);
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amonut")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime");

                    b.Property<string>("TransationId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Transact__3214EC0711B818F5");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "TransationId" }, "UQ__Transact__B1E7315490DC15CB")
                        .IsUnique();

                    b.ToTable("Transaction", (string)null);
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessToken")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<string>("CampusId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("RefreshToken")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__User__3214EC07644E0073");

                    b.HasIndex("CampusId");

                    b.HasIndex(new[] { "UserId" }, "UQ__User__1788CC4D63AAACC1")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.AreaSession", b =>
                {
                    b.HasOne("SWD392_BE.Repositories.Entities.Area", "Area")
                        .WithMany("AreaSessions")
                        .HasForeignKey("AreaId")
                        .HasPrincipalKey("AreaId")
                        .IsRequired()
                        .HasConstraintName("FK_AreaSession_Area");

                    b.HasOne("SWD392_BE.Repositories.Entities.Session", "Session")
                        .WithMany("AreaSessions")
                        .HasForeignKey("SessionId")
                        .HasPrincipalKey("SessionId")
                        .IsRequired()
                        .HasConstraintName("FK_AreaSession_Session");

                    b.Navigation("Area");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.Campus", b =>
                {
                    b.HasOne("SWD392_BE.Repositories.Entities.Area", "Area")
                        .WithMany("Campuses")
                        .HasForeignKey("AreaId")
                        .HasPrincipalKey("AreaId")
                        .IsRequired()
                        .HasConstraintName("FK_Campus_Area");

                    b.Navigation("Area");
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.Food", b =>
                {
                    b.HasOne("SWD392_BE.Repositories.Entities.Store", "Store")
                        .WithMany("Foods")
                        .HasForeignKey("StoreId")
                        .HasPrincipalKey("StoreId")
                        .IsRequired()
                        .HasConstraintName("FK_Food_Store");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.Order", b =>
                {
                    b.HasOne("SWD392_BE.Repositories.Entities.AreaSession", "AreaSession")
                        .WithMany("Orders")
                        .HasForeignKey("AreaSessionId")
                        .HasPrincipalKey("AreaSessionId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_AreaSession");

                    b.HasOne("SWD392_BE.Repositories.Entities.Store", "Store")
                        .WithMany("Orders")
                        .HasForeignKey("StoreId")
                        .HasPrincipalKey("StoreId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_Store");

                    b.HasOne("SWD392_BE.Repositories.Entities.Transaction", "Transation")
                        .WithMany("Orders")
                        .HasForeignKey("TransationId")
                        .HasPrincipalKey("TransationId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_Transaction");

                    b.HasOne("SWD392_BE.Repositories.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasPrincipalKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_User");

                    b.Navigation("AreaSession");

                    b.Navigation("Store");

                    b.Navigation("Transation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.OrderDetail", b =>
                {
                    b.HasOne("SWD392_BE.Repositories.Entities.Food", "Food")
                        .WithMany("OrderDetails")
                        .HasForeignKey("FoodId")
                        .HasPrincipalKey("FoodId")
                        .IsRequired()
                        .HasConstraintName("FK_OrderDetail_Food");

                    b.HasOne("SWD392_BE.Repositories.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .HasPrincipalKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_OrderDetail_Order");

                    b.Navigation("Food");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.Store", b =>
                {
                    b.HasOne("SWD392_BE.Repositories.Entities.Area", "Area")
                        .WithMany("Stores")
                        .HasForeignKey("AreaId")
                        .HasPrincipalKey("AreaId")
                        .IsRequired()
                        .HasConstraintName("FK_Store_Area");

                    b.Navigation("Area");
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.Transaction", b =>
                {
                    b.HasOne("SWD392_BE.Repositories.Entities.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .HasPrincipalKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Transaction_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.User", b =>
                {
                    b.HasOne("SWD392_BE.Repositories.Entities.Campus", "Campus")
                        .WithMany("Users")
                        .HasForeignKey("CampusId")
                        .HasPrincipalKey("CampusId")
                        .IsRequired()
                        .HasConstraintName("FK_User_Campus");

                    b.Navigation("Campus");
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.Area", b =>
                {
                    b.Navigation("AreaSessions");

                    b.Navigation("Campuses");

                    b.Navigation("Stores");
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.AreaSession", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.Campus", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.Food", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.Session", b =>
                {
                    b.Navigation("AreaSessions");
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.Store", b =>
                {
                    b.Navigation("Foods");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.Transaction", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SWD392_BE.Repositories.Entities.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
